{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/conversation/conversation.component.css","webpack:///./src/app/conversation/conversation.component.html","webpack:///./src/app/conversation/conversation.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/message.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/user-list/user-list.component.css","webpack:///./src/app/user-list/user-list.component.html","webpack:///./src/app/user-list/user-list.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { ConversationComponent } from './conversation/conversation.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'register',\n    pathMatch: 'full'\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'user-list',\n    component: UserListComponent\n  },\n  {\n    path: 'conversation/:username',\n    component: ConversationComponent\n  }\n];\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [ RouterModule.forRoot(routes) ],\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1>{{ title }}</h1>\\n<!-- <app-register></app-register>\\n<app-user-list></app-user-list> -->\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Chat App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'; \n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { ConversationComponent } from './conversation/conversation.component';\nimport { LoginComponent } from './login/login.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    UserListComponent,\n    ConversationComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".messages {\\n    list-style-type: none;\\n    padding: 0;\\n    width: 350px;\\n    overflow: hidden;\\n    clear: both;\\n    display: block;\\n}\\n.messages li {\\n    padding: 10px;\\n    border-radius: 10px;\\n    background: #e2e2e2;\\n    margin: 5px;\\n    color: slategray;\\n    float: left;\\n    display: block;\\n    clear: both;\\n}\\n.messages li.sent {\\n    background: lightgreen;\\n    color: #f9f9f9;\\n    float: right;\\n}\\n.messages li span {\\n    color: inherit;\\n}\\n.messages li span.time {\\n    font-size: 10px;\\n    font-style: italic;\\n    color: slategrey;\\n}\\n.messages li.sent span.time {\\n    color: #eee;\\n}\"","module.exports = \"<div *ngIf=\\\"chattingWith\\\" class=\\\"conversation\\\">\\n  <h6>Talking to: {{chattingWith.username}}</h6>\\n\\n  <div class=\\\"search-messages\\\">\\n    <input [(ngModel)]=\\\"search\\\" placeholder=\\\"Search...\\\">\\n    <input (click)=\\\"searchMessages()\\\" type=\\\"submit\\\" value=\\\"&raquo;\\\">\\n  </div>\\n\\n  <ul *ngIf=\\\"messages\\\" class=\\\"messages\\\">\\n    <li *ngFor=\\\"let message of messages\\\"\\n      [class.sent]=\\\"message.from === user.username\\\">\\n      <span>{{message.body}}</span>\\n      <br>\\n      <span class=\\\"time\\\">{{formatSent(message.sent)}}</span>\\n    </li>\\n  </ul>\\n\\n  <div *ngIf=\\\"messages.length == 0\\\">\\n    <span class=\\\"light\\\">no messages found...</span>\\n  </div>\\n\\n  <div class=\\\"send-message\\\">\\n    <input [(ngModel)]=\\\"message.body\\\" placeholder=\\\"Message...\\\">\\n    <input (click)=\\\"sendMessage()\\\" type=\\\"submit\\\" value=\\\"Send\\\">\\n  </div>\\n</div>\\n\\n<br><br>\\n\\n<a routerLink=\\\"/user-list\\\">Users</a>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { MessageService } from '../message.service';\nimport { User } from '../user';\nimport { Message } from '../message';\n\n@Component({\n  selector: 'app-conversation',\n  templateUrl: './conversation.component.html',\n  styleUrls: ['./conversation.component.css']\n})\nexport class ConversationComponent implements OnInit {\n  user: User;\n  chattingWith: User;\n\n  search: '';\n  messages: Message[] = [];\n  message: Message = {\n    body: '',\n    sent: null,\n    from: null,\n    to: null\n  };\n\n  getUser(): void {\n    this.user = this.userService.activeUser;\n    if (!this.user) {\n      this.router.navigate(['login']);\n    } else {\n      this.message.from = this.user.username;\n    }\n  };\n\n  prepareConversation(): void {\n    const username = this.route.snapshot.paramMap.get('username');\n    this.userService.getUser(username)\n      .subscribe(user => {\n        this.chattingWith = user;\n        this.message.to = this.chattingWith.username;\n        this.getMessages();\n      });\n  };\n\n  getMessages(): void {\n    this.messageService.getMessages(this.user, this.chattingWith)\n      .subscribe(messages => this.messages = messages);\n  };\n\n  searchMessages(): void {\n    this.messageService.searchMessages(this.user, this.chattingWith, this.search)\n      .subscribe(messages => { this.messages = messages; console.log(messages) });\n  };\n\n  sendMessage(): void {\n    this.message.sent = Date.now();\n    this.messageService.sendMessage(this.message)\n      .subscribe(message => {\n        this.message = new Message;\n        this.message.from = this.user.username;\n        this.message.to = this.chattingWith.username;\n\n        this.messages.push(message)\n      });\n  };\n\n  formatSent(sent): string {\n    let date = new Date(sent);\n    return date.toISOString().substr(0, 10) + ' ' + date.toLocaleTimeString();\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private messageService: MessageService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getUser();\n    this.prepareConversation();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h4>Login</h4>\\n  <label>Username:\\n    <input [(ngModel)]=\\\"user.username\\\" placeholder=\\\"username\\\">\\n  </label>\\n  <br>\\n  <label>Password:\\n    <input [(ngModel)]=\\\"user.password\\\" placeholder=\\\"password\\\" type=\\\"password\\\">\\n  </label>\\n  <br><br>\\n  <input (click)=\\\"login()\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\n  <br><br>\\n  <a routerLink=\\\"\\\">Register</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user: User = {\n    username: '',\n    password: ''\n  };\n\n  login(): void {\n    this.userService.login(this.user)\n      .subscribe((res) => {\n        if (res !== null) {\n          this.router.navigate(['/user-list']);\n        } else {\n          alert('Invalid credentials');// TODO: better error handling\n        }\n      });\n  };\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\nimport { Message } from './message';\nimport { User } from './user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  private messagesUrl = environment.apiUrl + '/api/messages';\n\n  messages: Message[] = [];\n\n  getMessages(to: User, from: User): Observable<Message[]> {\n    const params = this.createToFromUsersQuery(to, from);\n    const url = this.messagesUrl + '?' + this.serialize(params);\n    return this.http.get<Message[]>(url, httpOptions)\n      .pipe(\n        catchError(this.handleError<Message[]>('getMessages', null))\n      );\n  };\n\n  searchMessages(to: User, from: User, search: string): Observable<Message[]> {\n    const query = {\n      'body': { '$regex': search, '$options': 'i' }\n    };\n    const params = this.createToFromUsersQuery(to, from, query);\n    const url = this.messagesUrl + '?' + this.serialize(params);\n    return this.http.get<Message[]>(url, httpOptions)\n      .pipe(\n        catchError(this.handleError<Message[]>('getMessages', null))\n      );\n  };\n\n  sendMessage(Message): Observable<Message> {\n    return this.http.post<Message>(this.messagesUrl, Message, httpOptions)\n      .pipe(\n        catchError(this.handleError<Message>('sendMessage', null))\n      );\n  };\n\n  constructor(private http: HttpClient) { }\n\n  private createToFromUsersQuery(user1: User, user2: User, query?: object): Object {\n    return {\n      '$and': [\n        {\n          '$or': [\n            { to: user1.username },\n            { to: user2.username }\n          ]\n        },\n        {\n          '$or': [\n            { from: user1.username },\n            { from: user2.username }\n          ]\n        },\n        query ? query : {}// TODO: cleaner query method logic so we don't get an empty object here\n      ]\n    };\n  };\n\n  private serialize(obj, prefix?) {\n    let str = [];\n    let p;\n    for (p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        let k = prefix ? prefix + '[' + p + ']' : p;\n        let v = obj[p];\n        str.push((v !== null && typeof v === 'object') ?\n          this.serialize(v, k) :\n          encodeURIComponent(k) + '=' + encodeURIComponent(v));\n      }\n    }\n    return str.join('&');\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(`${operation} failed: ${error.message}`); // log to console instead\n \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { User } from './user';\n\nexport class Message {\n    body: string;\n    sent: number;\n    from: string;\n    to: string;\n};","module.exports = \"\"","module.exports = \"<div>\\n  <h4>Register</h4>\\n  <label>Username:\\n    <input [(ngModel)]=\\\"user.username\\\" placeholder=\\\"username\\\">\\n  </label>\\n  <br>\\n  <label>Password:\\n    <input [(ngModel)]=\\\"user.password\\\" placeholder=\\\"password\\\" type=\\\"password\\\">\\n  </label>\\n  <br><br>\\n  <input (click)=\\\"register()\\\" type=\\\"submit\\\" value=\\\"Register\\\">\\n  <br><br>\\n  <a routerLink=\\\"/login\\\">Login</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user: User = {\n    username: '',\n    password: ''\n  };\n\n  register(): void {\n    this.userService.register(this.user)\n      .subscribe(() => this.router.navigate(['/user-list']));\n  };\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".user-list {\\n    list-style-type: none;\\n    padding: 0;\\n}\\n.user-list li {\\n    display: inline-block;\\n    cursor: pointer;\\n    margin: 5px 7px;\\n}\\n.user-list li a {\\n    color: #f2f2f2;\\n    background: #369;\\n    padding: 7px 15px;\\n    border-radius: 6px;\\n    text-decoration: none;\\n}\\n.user-list li:hover a {\\n    text-decoration: underline;\\n}\\n.user-list li.selected {\\n    color: lightgreen;\\n}\\n.user-list li span {\\n    color: inherit;\\n}\"","module.exports = \"<h4>Start/Continue Chat With:</h4>\\n<ul class=\\\"user-list\\\">\\n  <li *ngFor=\\\"let user of users\\\">\\n    <a routerLink=\\\"/conversation/{{user.username}}\\\">\\n      <span>{{user.username}}</span>\\n    </a>\\n  </li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  user: User;\n  users: User[];\n\n  getUser(): void {\n    this.user = this.userService.activeUser;\n    if (!this.user) {\n      this.router.navigate(['login']);\n    }\n  };\n\n  getUsers(): void {\n    this.userService.getUsers()\n      .subscribe(users => this.users = users.filter((user) => {\n        return user.username != this.user.username;\n      }));\n  }\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getUser();\n    this.getUsers();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\nimport { User } from './user';\nimport { Md5 } from 'ts-md5/dist/md5';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private usersUrl = environment.apiUrl + '/api/users';\n\n  activeUser: User;// TODO: user sessions\n\n  setActiveUser(user: User): void {\n    this.activeUser = user;\n  };\n\n  passwordHash(password: string): string {\n    return <string>Md5.hashStr(password);// TODO: needs some salt\n  };\n\n  register(user: User): Observable<User> {\n    // TODO: clone user before hashing password\n    // as two-way data binding is causing the password field to change as well\n    user.password = this.passwordHash(user.password);\n    return this.http.post<User>(this.usersUrl + '/register', user, httpOptions)\n      .pipe(\n        tap(user => this.setActiveUser(user)),\n        catchError(this.handleError<User>('registerUser', null))// TODO: alert on username taken\n      );\n  };\n  \n  login(user: User): Observable<User> {\n    // TODO: clone user before hashing password\n    // as two-way data binding is causing the password field to change as well\n    user.password = this.passwordHash(user.password);\n    return this.http.post<User>(this.usersUrl + '/login', user, httpOptions)\n      .pipe(\n        tap(user => this.setActiveUser(user)),\n        catchError(this.handleError<User>('loginUser', null))\n      );\n  };\n  \n  getUser(username: string): Observable<User> {\n    const url = `${this.usersUrl}/${username}`;\n    return this.http.get<User>(url)\n      .pipe(\n        catchError(this.handleError<User>('getUser', null))\n      );\n  };\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.usersUrl)\n      .pipe(\n        catchError(this.handleError<User[]>('getUsers', null))\n      );\n  };\n\n  constructor(private http: HttpClient) { }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(`${operation} failed: ${error.message}`); // log to console instead\n \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://chat-api-llscidvlab.now.sh'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}